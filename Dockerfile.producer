# Use a base image that includes MPI (e.g., Ubuntu with MPI)
FROM ubuntu:latest

ENV ROLE=producer

# Install Open MPI and SSH client
RUN apt-get update && apt-get install -y \
    openmpi-bin \
    openssh-client openssh-server iproute2 iputils-ping \
    build-essential libopenmpi-dev

# Create an SSH key pair for the 'root' user with password "SIT315"
RUN ssh-keygen -q -N "" -t rsa -f /root/.ssh/id_rsa && \
    echo 'root:SIT315' | chpasswd && \
    cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && \
    echo "StrictHostKeyChecking no" >> /etc/ssh/ssh_config

# Copy the SSH public key from the host to the container
COPY keys/id_rsa.pub /root/.ssh/controller_key.pub

# Allow root login in SSH (BAD PRACTICE - MS 2024-09-01)
RUN echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config \
    && echo 'PasswordAuthentication no' >> /etc/ssh/sshd_config \
    && echo 'PubkeyAuthentication yes' >> /etc/ssh/sshd_config
RUN service ssh start

# Copy source code to the container
COPY mpi_palindrome.cpp /mpi_palindrome.cpp

# Compile the MPI program
# RUN mpicxx /mpi_palindrome.cpp -o /mpi_palindrome
RUN mpicxx -std=c++17 ./mpi_palindrome.cpp -o ./mpi_palindrome

# Append the copied SSH public key to the authorized_keys file
RUN cat /root/.ssh/controller_key.pub >> /root/.ssh/authorized_keys

# CMD service ssh start && bash
CMD /usr/sbin/sshd -D